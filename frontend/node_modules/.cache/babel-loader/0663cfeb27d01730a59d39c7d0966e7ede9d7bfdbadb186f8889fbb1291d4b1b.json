{"ast":null,"code":"var _jsxFileName = \"/Users/sonia/Documents/sweng861-backend/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Login from './pages/Login';\nimport Register from './pages/Register';\nimport Dashboard from './pages/Dashboard';\nimport DataSubmissionForm from './pages/DataSubmissionForm';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [showForm, setShowForm] = useState(false);\n  const [isRegistering, setIsRegistering] = useState(false);\n  const [submissions, setSubmissions] = useState([]);\n  const [userName, setUserName] = useState('');\n  const [userId, setUserId] = useState(null);\n  const [token, setToken] = useState('');\n  const handleLogin = async (name, id, token) => {\n    setIsLoggedIn(true);\n    setUserName(name);\n    setUserId(id);\n    setToken(token);\n\n    // Fetch submissions after login\n    try {\n      const response = await fetch('http://localhost:5001/api/submissions', {\n        method: 'GET',\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      const data = await response.json();\n      setSubmissions(data);\n    } catch (error) {\n      console.error('Error fetching submissions:', error);\n    }\n  };\n  const handleRegister = () => {\n    setIsRegistering(true);\n  };\n  const handleSuccessfulRegistration = () => {\n    setIsRegistering(false);\n  };\n  const handleDataSubmission = async data => {\n    try {\n      const response = await fetch('http://localhost:5001/api/submissions/create', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}`\n        },\n        body: JSON.stringify({\n          ...data,\n          userId\n        })\n      });\n      const newSubmission = await response.json();\n      setSubmissions([...submissions, newSubmission]);\n      setShowForm(false);\n    } catch (error) {\n      console.error('Error submitting data:', error);\n    }\n  };\n  const handleLogout = () => {\n    setIsLoggedIn(false);\n    setUserName('');\n    setUserId(null);\n    setSubmissions([]);\n    setShowForm(false);\n    setToken('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: isLoggedIn ? showForm ? /*#__PURE__*/_jsxDEV(DataSubmissionForm, {\n      onSubmit: handleDataSubmission\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(Dashboard, {\n      userName: userName,\n      submissions: submissions,\n      onShowForm: handleShowForm,\n      onLogout: handleLogout\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 11\n    }, this) : isRegistering ? /*#__PURE__*/_jsxDEV(Register, {\n      onRegister: handleSuccessfulRegistration\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Login, {\n      onLogin: handleLogin,\n      onRegister: handleRegister,\n      setUserName: setUserName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"exM/oj23MpQeDx995Sh3QuGdlCg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Login","Register","Dashboard","DataSubmissionForm","jsxDEV","_jsxDEV","App","_s","isLoggedIn","setIsLoggedIn","showForm","setShowForm","isRegistering","setIsRegistering","submissions","setSubmissions","userName","setUserName","userId","setUserId","token","setToken","handleLogin","name","id","response","fetch","method","headers","data","json","error","console","handleRegister","handleSuccessfulRegistration","handleDataSubmission","body","JSON","stringify","newSubmission","handleLogout","className","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","onShowForm","handleShowForm","onLogout","onRegister","onLogin","_c","$RefreshReg$"],"sources":["/Users/sonia/Documents/sweng861-backend/frontend/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport Login from './pages/Login';\nimport Register from './pages/Register';\nimport Dashboard from './pages/Dashboard';\nimport DataSubmissionForm from './pages/DataSubmissionForm';\nimport './App.css';\n\nconst App = () => {\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [showForm, setShowForm] = useState(false);\n  const [isRegistering, setIsRegistering] = useState(false);\n  const [submissions, setSubmissions] = useState([]);\n  const [userName, setUserName] = useState('');\n  const [userId, setUserId] = useState(null);\n  const [token, setToken] = useState('');\n\n  const handleLogin = async (name, id, token) => {\n    setIsLoggedIn(true);\n    setUserName(name);\n    setUserId(id);\n    setToken(token);\n\n    // Fetch submissions after login\n    try {\n      const response = await fetch('http://localhost:5001/api/submissions', {\n        method: 'GET',\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      const data = await response.json();\n      setSubmissions(data);\n    } catch (error) {\n      console.error('Error fetching submissions:', error);\n    }\n  };\n\n  const handleRegister = () => {\n    setIsRegistering(true);\n  };\n\n  const handleSuccessfulRegistration = () => {\n    setIsRegistering(false);\n  };\n\n  const handleDataSubmission = async (data) => {\n    try {\n      const response = await fetch('http://localhost:5001/api/submissions/create', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}`\n        },\n        body: JSON.stringify({ ...data, userId }),\n      });\n      const newSubmission = await response.json();\n      setSubmissions([...submissions, newSubmission]);\n      setShowForm(false);\n    } catch (error) {\n      console.error('Error submitting data:', error);\n    }\n  };\n\n  const handleLogout = () => {\n    setIsLoggedIn(false);\n    setUserName('');\n    setUserId(null);\n    setSubmissions([]);\n    setShowForm(false);\n    setToken('');\n  };\n\n  return (\n    <div className=\"App\">\n      {isLoggedIn ? (\n        showForm ? (\n          <DataSubmissionForm onSubmit={handleDataSubmission} />\n        ) : (\n          <Dashboard \n            userName={userName} \n            submissions={submissions} \n            onShowForm={handleShowForm} \n            onLogout={handleLogout} \n          />\n        )\n      ) : isRegistering ? (\n        <Register onRegister={handleSuccessfulRegistration} />\n      ) : (\n        <Login \n          onLogin={handleLogin} \n          onRegister={handleRegister} \n          setUserName={setUserName} \n        />\n      )}\n    </div>\n  );\n};\n\nexport default App;\n\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}